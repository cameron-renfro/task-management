AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-nodejs22.x

  Sample SAM Template for lambda-nodejs22.x

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: ping.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Events:
        Ping:
          Type: Api
          Properties:
            Path: /ping
            Method: get

  RegisterFunction:
    Type: AWS::Serverless::Function

    Properties:
      CodeUri: src/handlers/
      Handler: auth/register.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        RegisterGet:
          Type: Api
          Properties:
            Path: /auth/register
            Method: get
        RegisterPost:
          Type: Api
          Properties:
            Path: /auth/register
            Method: post

  ConfirmFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: auth/confirm.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        ConfirmGet:
          Type: Api
          Properties:
            Path: /auth/confirm
            Method: get
        ConfirmPost:
          Type: Api
          Properties:
            Path: /auth/confirm
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: auth/login.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        LoginGet:
          Type: Api
          Properties:
            Path: /auth/login
            Method: get
        LoginPost:
          Type: Api
          Properties:
            Path: /auth/login
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PingApi:
    Description: 'API Gateway endpoint URL for Prod stage for Hello World function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/ping/'
  PingFunction:
    Description: 'Hello World Lambda Function ARN'
    Value: !GetAtt PingFunction.Arn
  PingFunctionIamRole:
    Description: 'Implicit IAM Role created for Hello World function'
    Value: !GetAtt PingFunctionRole.Arn

  RegisterApi:
    Description: 'API Gateway endpoint URL for Prod stage for Register function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/auth/register/'
  RegisterFunction:
    Description: 'Register Lambda Function ARN'
    Value: !GetAtt RegisterFunction.Arn
  RegisterFunctionIamRole:
    Description: 'Implicit IAM Role created for Register function'
    Value: !GetAtt RegisterFunctionRole.Arn

  ConfirmApi:
    Description: 'API Gateway endpoint URL for Prod stage for Register function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/auth/confirm/'
  ConfirmFunction:
    Description: 'Confirm Lambda Function ARN'
    Value: !GetAtt ConfirmFunction.Arn
  ConfirmFunctionIamRole:
    Description: 'Implicit IAM Role created for Confirm function'
    Value: !GetAtt ConfirmFunctionRole.Arn

  LoginApi:
    Description: 'API Gateway endpoint URL for Prod stage for Register function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/auth/login/'
  LoginFunction:
    Description: 'Login Lambda Function ARN'
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: 'Implicit IAM Role created for Login function'
    Value: !GetAtt LoginFunctionRole.Arn
